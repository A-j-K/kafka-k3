1.14
-- Previously if no JSON conf was found k3backup would terminate. Now, it
   will continue to run and expect ENV VARs to be setup to provide configuration.
   This makes it slightly easier to run in enviroments like K8s where building
   the JSON config was more problematic than just defining ENV VARs. This is a
   minor improvement.

1.13.1
-- AWS SDK C++ bump to version 1.4.75
-- Refactor to create k3backup and k3replay as well as keeping deprecated k3
-- k3replay refactor done, it's now ready to begin developement.

1.13
-- Ignore topics that start with two leading underscores and
   not just "__consumer_*" as there are other internals Kafka
   uses which are prefixed this way.

1.12
-- Add self checking of memory limits. If reach a threshold
   shutdown the Kafka system and restart. Basically self HUP
-- Added extra info to DEVEL.md (for my futre self's sanity)

1.11
-- Retagging for release.

1.10
-- Improve build times by only building k3:dev when libs change.

1.9
-- Add general.binsize config property
-- Add general.collecttime_ms config property

1.8
-- Make sure "group.id" is set to a default value.
-- Update README.md to reflect this and add some extra documentation.

1.7
-- Kafka names topics "__consumer_*" to hold Kafka Consumer metatdata. Ignore these.
-- Upgrade AWS SDK to 1.4.62
-- Specify the rdkafka library version at build time via vars

1.6
-- Add ability to define loglevel
-- Use AWS logging features to own code
-- Update AWS CPP lib to 1.4.59

1.5
-- Allow ENV var to config broker list and batchsize
-- README.md updates for above

1.4
-- 12 Factor App, log to console (stdout)
-- Tidy up some pointers to use shared pointers instead

1.3
-- Add AWS default credentials provider if aws.access_key is not supplied in config

1.2
-- Memory optimisation in S3 put
-- Decouple S3 object from any RdKafka objects
-- AWS Log tracing

1.1
-- Add CA Certs to release

1.0
-- First release

